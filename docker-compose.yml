version: '3'
services:
  web:
    build: ./app
    ports:
      - 8000:8000
    command: uvicorn app.main:app --host 0.0.0.0 --reload
    volumes:
      - ./app:/usr/src/app # for development mode
    environment:
      - BROKER_URL=redis://redis:6379/0
      - RESULT_BACKEND=db+postgresql://postgres:example@postgresserver/db # ref: `POSTGRES_DB`
    depends_on:
      - redis
      - db

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: db # Created database
    networks:
      default:
        aliases:
          - postgresserver

  worker:
    build: ./app
    command: celery --app app.tasks:celery worker --loglevel=info --logfile=logs/celery.log
    volumes:
      - ./app:/usr/src/app # for development mode
    environment:
      - BROKER_URL=redis://redis:6379/0
      - RESULT_BACKEND=db+postgresql://postgres:example@postgresserver/db
    depends_on:
      - redis
      - db

  redis:
    image: redis
    ports:
      - 6379:6379
      # - 127.0.0.1:6379:6379

  flower:
    image: mher/flower
    ports:
      - 5555:5555
    environment:
      - BROKER_URL=redis://redis:6379/0
      - RESULT_BACKEND=db+postgresql://postgres:example@postgresserver/db
    command: celery flower
    depends_on:
      - redis
      - db

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  my-website:
    build:
      context: ./my-website
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000
    working_dir:
      /usr/src/app
    command: npm run start -- --host 0.0.0.0
    volumes:
      - ./my-website:/usr/src/app
      - /usr/src/app/node_modules # exclude folder
      - /usr/src/app/.docusaurus # exclude folder